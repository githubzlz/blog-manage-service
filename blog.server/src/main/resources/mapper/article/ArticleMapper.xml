<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zlz.blog.server.article.mapper.ArticleMapper">

    <resultMap id="article" type="com.zlz.blog.common.entity.article.BlogArticle">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="title" property="title"/>
        <result column="summary" property="summary"/>
        <result column="author" property="author"/>
        <result column="tag" property="tag"/>
        <result column="type" property="type"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="provenance" property="provenance"/>
        <result column="visible_strategy" property="visibleStrategy"/>
        <result column="is_show" property="isShow"/>
        <result column="creator" property="creator"/>
        <result column="created_time" property="createdTime"/>
        <result column="last_modifier" property="lastModifier"/>
        <result column="last_modified_time" property="lastModifiedTime"/>
        <result column="blog_type" property="blogType"/>
        <association property="blogPublicInfos" javaType="com.zlz.blog.common.entity.article.BlogPublicInfo">
            <id column="p_id" property="id"/>
            <result column="blog_id" property="blogId"/>
            <result column="stars" property="stars"/>
            <result column="goods" property="goods"/>
            <result column="comments" property="comments"/>
            <result column="readings" property="readings"/>
            <result column="collect" property="collect"/>
        </association>
        <association property="blogRecommend" javaType="com.zlz.blog.common.entity.article.BlogRecommend">
            <id column="r_id" property="id"/>
            <result column="blog_id" property="blogId"/>
            <result column="recommend_type" property="recommendType"/>
            <result column="image_url" property="imageUrl"/>
            <result column="creator" property="creator"/>
            <result column="r_created_time" property="createdTime"/>
            <result column="last_modifier" property="lastModifier"/>
            <result column="r_last_modified_time" property="lastModifiedTime"/>
        </association>
    </resultMap>

    <select id="selectPage" resultMap="article">
        SELECT
        a.*,p.id as p_id, p.*,r.id as r_id, r.*
        FROM
        blog_article a
        LEFT JOIN blog_content c ON a.id = c.blog_id
        LEFT JOIN blog_public_info p ON a.id = p.blog_id
        LEFT JOIN blog_recommend r on a.id = r.blog_id
        <where>
            <if test="article.pageInfo != null and article.pageInfo.exclude != null">
                <foreach collection="article.pageInfo.exclude" item="item">
                    AND ${item.column} = #{item.value}
                </foreach>
            </if>
            AND a.user_id = #{article.userId}
            <if test="null != article.title and '' != article.title">
                AND (
                a.title like concat('%',#{article.title},'%')
                OR a.summary like concat('%',#{article.title},'%')
                )
            </if>
            <if test="null != article.type and '' != article.type and null == article.subType">
                AND a.type like concat('%',#{article.type},'%')
            </if>
            <if test="null != article.subType and '' != article.subType">
                AND a.type like concat('%',#{article.subType},'%')
            </if>
            <if test="null != article.tags">
                <foreach collection="article.tags" item="item">
                    AND a.tag like concat('%',#{item},'%')
                </foreach>
            </if>
            <if test="null != article.blogContent">
                <if test="null != article.blogContent.contentMd">
                    AND c.content_md like concat('%',#{article.blogContent.contentMd},'%')
                </if>
            </if>
        </where>
    </select>

    <select id="selectListByIds" resultMap="article">
        SELECT
        a.*,p.*
        FROM
        blog_article a
        LEFT JOIN blog_content c ON a.id = c.blog_id
        LEFT JOIN blog_public_info p ON a.id = p.blog_id
        WHERE a.id IN (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
    </select>

    <select id="selectAll" resultMap="article">
        SELECT
        a.id, a.type, a.tag, a.title
        FROM
        blog_article a
        WHERE a.id NOT IN (
            select blog_id from blog_recommend
            <where>
                <if test="null != param and '' != param">
                    recommend_type = #{param}
                </if>
            </where>
            )
    </select>

    <select id="selectBlogRecommend" resultMap="article">
        SELECT
               a.id, a.title, a.tag, a.type, a.created_time, r.image_url, r.id as r_id, r.recommend_type, r.blog_id, r.created_time as r_created_time
        FROM blog_article a
        RIGHT JOIN blog_recommend r
        ON a.id = r.blog_id
        WHERE  r.recommend_type = #{type}
    </select>

    <select id="selectListOrderByHot" resultType="com.zlz.blog.common.entity.article.BlogArticle">
        SELECT a.*,
               p.*,
               p.goods * 1.5 + p.readings + p.comments * 2 as orderNum
        FROM blog_article a
                 LEFT JOIN blog_content c ON a.id = c.blog_id
                 LEFT JOIN blog_public_info p ON a.id = p.blog_id
        WHERE a.is_deleted = 0
        ORDER BY orderNum DESC
        <if test="num != null and num != ''">
            LIMIT #{num}
        </if>
    </select>
</mapper>
